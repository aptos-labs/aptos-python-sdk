from logging.handlers import BufferingHandler

from _typeshed import Incomplete

class RecordFilter:
    include: Incomplete
    exclude: Incomplete
    def __init__(self, names) -> None: ...
    def filter(self, record): ...

class LoggingCapture(BufferingHandler):
    config: Incomplete
    old_handlers: Incomplete
    old_level: Incomplete
    level: Incomplete
    def __init__(self, config, level: Incomplete | None = None) -> None: ...
    def __bool__(self) -> bool: ...
    def flush(self) -> None: ...
    buffer: Incomplete
    def truncate(self) -> None: ...
    def getvalue(self): ...
    def find_event(self, pattern): ...
    def any_errors(self): ...
    def inveigle(self) -> None: ...
    def abandon(self) -> None: ...

MemoryHandler = LoggingCapture

def capture(*args, **kw): ...
