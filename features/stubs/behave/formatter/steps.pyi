from _typeshed import Incomplete
from behave import i18n as i18n
from behave.formatter.base import Formatter as Formatter
from behave.step_registry import StepRegistry as StepRegistry
from behave.step_registry import registry as registry
from behave.textutil import compute_words_maxsize as compute_words_maxsize
from behave.textutil import indent as indent
from behave.textutil import make_indentation as make_indentation

class AbstractStepsFormatter(Formatter):
    step_types: Incomplete
    step_registry: Incomplete
    current_feature: Incomplete
    shows_location: Incomplete
    def __init__(self, stream_opener, config) -> None: ...
    def reset(self) -> None: ...
    def discover_step_definitions(self) -> None: ...
    def feature(self, feature) -> None: ...
    def eof(self) -> None: ...
    stream: Incomplete
    def close(self) -> None: ...
    def report(self) -> None: ...
    def describe_step_definition(
        self, step_definition, step_type: Incomplete | None = None
    ): ...

class StepsFormatter(AbstractStepsFormatter):
    name: str
    description: str
    shows_location: bool
    min_location_column: int
    def report(self) -> None: ...
    def report_steps_by_type(self) -> None: ...

class StepsDocFormatter(AbstractStepsFormatter):
    name: str
    description: str
    shows_location: bool
    shows_function_name: bool
    ordered_by_location: bool
    doc_prefix: Incomplete
    def report(self) -> None: ...
    def report_step_definition_docs(self) -> None: ...
    def write_step_definition(self, step_definition) -> None: ...

class StepsCatalogFormatter(StepsDocFormatter):
    name: str
    description: str
    shows_location: bool
    shows_function_name: bool
    ordered_by_location: bool
    doc_prefix: Incomplete
    def describe_step_definition(
        self, step_definition, step_type: Incomplete | None = None
    ): ...

class StepsUsageFormatter(AbstractStepsFormatter):
    name: str
    description: str
    doc_prefix: Incomplete
    min_location_column: int
    step_usage_database: Incomplete
    undefined_steps: Incomplete
    def __init__(self, stream_opener, config) -> None: ...
    def reset(self) -> None: ...
    def get_step_type_for_step_definition(self, step_definition): ...
    def select_unused_step_definitions(self): ...
    def update_usage_database(self, step_definition, step) -> None: ...
    def update_usage_database_for_step(self, step) -> None: ...
    def update_usage_database_for_feature(self, feature) -> None: ...
    def feature(self, feature) -> None: ...
    def report(self) -> None: ...
    def report_used_step_definitions(self): ...
    def report_unused_step_definitions(self): ...
    def report_undefined_steps(self) -> None: ...

def steps_contain(steps, step): ...
