from _typeshed import Incomplete
from behave.formatter.base import Formatter as Formatter
from behave.textutil import compute_words_maxsize as compute_words_maxsize

class AbstractTagsFormatter(Formatter):
    with_tag_inheritance: bool
    tag_counts: Incomplete
    def __init__(self, stream_opener, config) -> None: ...
    def uri(self, uri) -> None: ...
    def feature(self, feature) -> None: ...
    def scenario(self, scenario) -> None: ...
    stream: Incomplete
    def close(self) -> None: ...
    def record_tags(self, tags, model_element) -> None: ...
    def report_tags(self) -> None: ...

class TagsFormatter(AbstractTagsFormatter):
    name: str
    description: str
    with_tag_inheritance: bool
    show_ordered_by_usage: bool
    def report_tags(self) -> None: ...
    @staticmethod
    def get_tag_count_details(tag_count): ...
    def report_tag_counts(self) -> None: ...
    def report_tag_counts_by_usage(self): ...

class TagsLocationFormatter(AbstractTagsFormatter):
    name: str
    description: str
    with_tag_inheritance: bool
    def report_tags(self) -> None: ...
    def report_tags_by_locations(self) -> None: ...
